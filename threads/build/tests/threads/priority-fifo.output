Kernel command line: -q run priority-fifo
0 ~ 9fc00 1
100000 ~ 13e0000 1
Pintos booting with: 
	base_mem: 0x0 ~ 0x9fc00 (Usable: 639 kB)
	ext_mem: 0x100000 ~ 0x13e0000 (Usable: 19,328 kB)
Calibrating timer...  130,867,200 loops/s.
Boot complete.
Executing 'priority-fifo':
(priority-fifo) begin
(priority-fifo) 16 threads will iterate 16 times in the same order each time.
(priority-fifo) If the order varies then there is a bug.
(priority-fifo) end
Execution of 'priority-fifo' complete.
Timer: 26 ticks
Thread: 0 idle ticks, 26 kernel ticks, 0 user ticks
Console: 557 characters output
Keyboard: 0 keys pressed
Powering offKernel PANIC at ../../threads/thread.c:269 in thread_current(): assertion `t->status == THREAD_RUNNING' failed.
Call stack: 0x800421342c 0x8004206ed7 0x800420a03f 0x80042164ba 0x80042165d8 0x800421092f 0x8004208b34 0x80042089a8 0x8004208d8f 0x80042099b7 0x8004209e0c 0x80042164f1 0x80042165d8 0x800421092f 0x8004208b34 0x80042089a8 0x8004208d8f 0x8004213c3f 0x8004213ce7 0x8004209b15 0x8004209fd6 0x8004218eae 0x8004207400.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 28 ticks
Thread: 0 idle ticks, 28 kernel ticks, 0 user ticks
Console: 1